{"version":3,"sources":["components/BillShow.tsx"],"names":["Text","BillShow","props","useState","in","out","amountInOut","setAmountInOut","billColumns","title","dataIndex","key","align","filters","dataCategory","map","v","text","name","value","onFilter","record","category","indexOf","MonthMenu","onClick","ConstMonthsText","i","Item","useEffect","amountIO","dataBill","filter","Number","dayjs","time","month","monthIndex","forEach","type","EnumBill","In","amount","className","overlay","e","preventDefault","code","toFixed","pagination","scroll","y","loading","length","columns","dataSource","c","find","vc","id","format"],"mappings":"8QA2BQA,G,WAAAA,MAgFOC,UA9EqC,SAACC,GAAwB,IAAD,EAChCC,mBAA0B,CAACC,GAAI,EAAGC,IAAK,IADP,mBACjEC,EADiE,KACpDC,EADoD,KAGpEC,EAAc,CAAC,CACfC,MAAO,2BACPC,UAAW,OACXC,IAAK,OACLC,MAAO,UACR,CACCH,MAAO,2BACPC,UAAW,OACXC,IAAK,OACLC,MAAO,UACR,CACCH,MAAO,2BACPC,UAAW,WACXC,IAAK,WACLC,MAAO,SACPC,QAASX,EAAMY,aAAaC,KAAI,SAAAC,GAAO,MAAO,CAAEC,KAAMD,EAAEE,KAAMC,MAAOH,EAAEE,SACvEE,SAAU,SAACD,EAAYE,GAAb,OAA0E,IAA7CA,EAAOC,SAASC,QAAQJ,KAChE,CACCV,MAAO,mCACPC,UAAW,SACXC,IAAK,SACLC,MAAO,WAiBLY,EACF,uBAAMC,QAASvB,EAAMuB,SAChBC,IAAgBX,KAAI,SAACC,EAAGW,GAAJ,OAAW,sBAAMC,KAAN,CAAWjB,IAAKgB,GAAIX,OAa5D,OARAa,qBAAU,WACN,IAAIC,EAA4B,CAAC1B,GAAI,EAAGC,IAAK,GAC7CH,EAAM6B,SAASC,QAAO,SAAAhB,GAAC,OAAIiB,OAAOC,IAAMlB,EAAEmB,MAAMC,WAAaH,OAAO/B,EAAMmC,eAAaC,SAAQ,SAAAtB,GAC3FA,EAAEuB,OAASC,IAASC,GAAKX,EAAS1B,IAAMY,EAAE0B,OAASZ,EAASzB,KAAOW,EAAE0B,UAEzEnC,EAAeuB,KAChB,CAAC5B,EAAMmC,WAAYnC,EAAM6B,WAGxB,yBAAKY,UAAU,aACX,yBAAKA,UAAU,wBACX,uBAAUC,QAASpB,GACf,uBAAGmB,UAAU,oBAAoBlB,QAAS,SAAAoB,GAAC,OAAIA,EAAEC,mBAC5CpB,IAAgBxB,EAAMmC,YAD3B,IACwC,kBAAC,IAAD,QAG5C,kBAACrC,EAAD,CAAM2C,UAAU,UAAhB,6BAA+B,kBAAC3C,EAAD,CAAM+C,MAAI,GAAV,SAAazC,EAAYF,GAAG4C,QAAQ,GAApC,MAC/B,kBAAChD,EAAD,CAAM2C,UAAU,UAAhB,6BAA+B,kBAAC3C,EAAD,CAAM+C,MAAI,GAAV,SAAazC,EAAYD,IAAI2C,QAAQ,MAExE,uBACIC,YAAY,EACZC,OAAQ,CAAEC,EAAG,KACbC,SAASlD,EAAMY,aAAauC,OAC5BC,QAAS9C,EACT+C,WA5CDrD,EAAM6B,SAASC,QAAO,SAAAhB,GAAC,OAAIiB,OAAOC,IAAMlB,EAAEmB,MAAMC,WAAaH,OAAO/B,EAAMmC,eAAatB,KAAI,SAACC,EAAGW,GAClG,IAAM6B,EAAItD,EAAMY,aAAa2C,MAAK,SAAAC,GAAE,OAAIA,EAAGC,KAAO3C,EAAEM,YACpD,MAAO,CACHX,IAAKgB,EACLQ,KAAMD,IAAMlB,EAAEmB,MAAMyB,SACpBrB,KAAMvB,EAAEuB,OAASC,IAASC,GAAI,eAAO,eACrCnB,SAAUkC,EAAIA,EAAEtC,KAAOF,EAAEM,SACzBoB,OAAQ1B,EAAE0B,OAAOM,QAAQ","file":"static/js/8.0b4187ec.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Table,\n    Menu, \n    Dropdown,\n    Typography,\n} from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport dayjs from 'dayjs';\n\nimport {\n    EnumBill,\n    EnumMonth,\n    TypeBill,\n    TypeCategory,\n    TypeAmountInOut,\n    ConstMonthsText\n} from '../types';\nimport '../styles.css';\n\ntype TypeProp = {\n    dataBill: TypeBill[],\n    dataCategory: TypeCategory[],\n    monthIndex: EnumMonth,\n    onClick: (o: object) => void\n}\n\nconst { Text } = Typography;\n\nconst BillShow: React.FunctionComponent<TypeProp> = (props): JSX.Element => {\n    const [amountInOut, setAmountInOut]   = useState<TypeAmountInOut>({in: 0, out: 0});  // 选择月份后收支统计\n\n    let billColumns = [{\n        title: '账单时间',\n        dataIndex: 'time',\n        key: 'time',\n        align: 'center' as any,\n    }, {\n        title: '账单类型',\n        dataIndex: 'type',\n        key: 'type',\n        align: 'center' as any,\n    }, {\n        title: '账单分类',\n        dataIndex: 'category',\n        key: 'category',\n        align: 'center' as any,\n        filters: props.dataCategory.map(v => { return { text: v.name, value: v.name } }),\n        onFilter: (value: any, record: any) => record.category.indexOf(value as string) === 0,\n    }, {\n        title: '账单金额(￥)',\n        dataIndex: 'amount',\n        key: 'amount',\n        align: 'center' as any,\n    }];\n\n    const checkBillDataForMonth = (): object[] => {\n        return props.dataBill.filter(v => Number(dayjs(v.time).month()) === Number(props.monthIndex)).map((v, i) => {\n            const c = props.dataCategory.find(vc => vc.id === v.category);\n            return {\n                key: i,\n                time: dayjs(v.time).format(),\n                type: v.type === EnumBill.In? \"收入\" : \"支出\",\n                category: c ? c.name : v.category,\n                amount: v.amount.toFixed(2)\n            }\n        });\n    }\n\n    // 月份的下拉菜单选项\n    const MonthMenu: React.ReactElement = (\n        <Menu onClick={props.onClick} >\n            {ConstMonthsText.map((v, i) => (<Menu.Item key={i}>{v}</Menu.Item>))}\n        </Menu>\n    );\n\n    // 计算收支\n    useEffect(() => {\n        let amountIO: TypeAmountInOut = {in: 0, out: 0};\n        props.dataBill.filter(v => Number(dayjs(v.time).month()) === Number(props.monthIndex)).forEach(v => {\n            v.type === EnumBill.In ? amountIO.in += v.amount : amountIO.out += v.amount;\n        });\n        setAmountInOut(amountIO);\n    }, [props.monthIndex, props.dataBill]);\n\n    return (\n        <div className=\"bill-show\">\n            <div className=\"monnth-select-in-out\">\n                <Dropdown overlay={MonthMenu}>\n                    <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                        {ConstMonthsText[props.monthIndex]} <DownOutlined />\n                    </a>\n                </Dropdown>\n                <Text className=\"in-out\">收入总额: <Text code>￥{amountInOut.in.toFixed(2)} </Text></Text>\n                <Text className=\"in-out\">支出总额: <Text code>￥{amountInOut.out.toFixed(2)}</Text></Text>\n            </div>\n            <Table\n                pagination={false}\n                scroll={{ y: 420 }}\n                loading={props.dataCategory.length ? false : true}\n                columns={billColumns}\n                dataSource={checkBillDataForMonth()}\n            />\n        </div>\n    );\n};\n\nexport default BillShow;\n"],"sourceRoot":""}